/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 * 
 * typedef struct ListNode listnode;
 * 
 * listnode* listnode_new(int val) {
 *     listnode* node = (listnode *) malloc(sizeof(listnode));
 *     node->val = val;
 *     node->next = NULL;
 *     return node;
 * }
 */
/**
 * @input A : Head pointer of linked list 
 * @input B : Integer
 * @input C : Integer
 * 
 * @Output head pointer of list.
 */
listnode* reverseBetween(listnode* A, int n1, int n2) 
{
    int i=0,j=0;
    listnode* h=A;
    listnode* prev=A;
    if(prev->next == NULL)
        return A;
    listnode* curr=prev->next;
    
    while(i<n1-2)
    {
        i++;
        h=h->next;
    }
    if(n1==1)
    {
        j=n2-n1;
        while(curr && j>0)
        {
            j--;
            prev->next=curr->next;
            curr->next=A;
            A=curr;
            curr=prev->next;
        }
        return A;
    }
    prev=h->next;
    curr=prev->next;
    j=n2-n1;
    while(curr && j>0)
    {
        j--;
        prev->next=curr->next;
        curr->next=h->next;
        h->next=curr;
        curr=prev->next;
    }
    
    return A;
}
